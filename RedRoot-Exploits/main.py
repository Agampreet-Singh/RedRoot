# Copyright 2025 Agampreet Singh
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
from rich.console import Console
from rich.table import Table
from rich.text import Text
from rich.panel import Panel
from rich.progress import Progress, SpinnerColumn, TextColumn
from utils.banner import animate_typing_banner, clear_screen
from engine.api_manager import ExploitFinderAPI
import time
import os

console = Console()

def display_results(results):
    if not results:
        console.print("[bold red]No exploits found for the given keyword.[/bold red]")
        return

    table = Table(title="[cyan]Matching Exploits Found[/cyan]", show_lines=True)
    table.add_column("Source", style="magenta")
    table.add_column("Title", style="green")
    table.add_column("URL", style="blue", overflow="fold")

    for r in results:
        table.add_row(r.get("source", "-"), r.get("title", "No Title"), r.get("url", "-"))

    console.print(table)

def save_results(results, filename):
    with open(filename, 'w') as f:
        for r in results:
            f.write(f"Source: {r.get('source', '-')}, Title: {r.get('title', '-')}, URL: {r.get('url', '-')}\n")
    console.print(f"\n[bold green]Results saved to:[/bold green] {filename}")

def main():
    parser = argparse.ArgumentParser(
        description="RedRoot Exploit Finder - Search for exploits by keyword",
        epilog="Example usage: python3 main.py -k apache 2.4.49 --save results.txt"
    )
    parser.add_argument('-k', '--keyword', required=True, help="Keyword(s) to search exploits for")
    parser.add_argument('--save', help="Save output to a file")
    args = parser.parse_args()

    clear_screen()
    animate_typing_banner("RedRoot Exploit Finder", color="cyan")

    console.rule("[bold red] Welcome Mr. Agampreet - Your Exploit Assistant [/]", style="bold red")
    console.print(Panel.fit(f"[bold green]Searching exploits for:[/] '[yellow]{args.keyword}[/yellow]'", title="[cyan]Initiated[/cyan]"))

    with Progress(SpinnerColumn(), TextColumn("[progress.description]{task.description}"), transient=True) as progress:
        progress.add_task(description="Connecting to APIs...", total=None)
        time.sleep(1)

    finder = ExploitFinderAPI(keyword=args.keyword)
    results = finder.run_all_sources()

    display_results(results)

    if args.save:
        save_results(results, args.save)

    console.rule("[bold green] Scan Completed ")

if __name__ == "__main__":
    main()
           
